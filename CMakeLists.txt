# -*- CMakeLists.txt generated by CodeLite IDE. Do not edit by hand -*-

cmake_minimum_required(VERSION 2.8.11)

# Project name
project(mbpoll)

# This setting is useful for providing JSON file used by CodeLite for code completion
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

# Set default locations
set(CL_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}//cmake-build-Release/output)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})

set(CONFIGURATION_NAME "Release")

# Projects


# Top project
# Define some variables
set(PROJECT_mbpoll_PATH "${CMAKE_CURRENT_LIST_DIR}")
set(WORKSPACE_PATH "${CMAKE_CURRENT_LIST_DIR}/")



#{{{{ User Code 1
# Place your code here
# Modifies binary file paths if codelite is not used.
if (NOT CL_USED)
  set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
  set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
endif (NOT CL_USED)

# Appends the cmake/modules path to MAKE_MODULE_PATH variable.
set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake" ${CMAKE_MODULE_PATH})

include (GitVersion)
GetGitVersion(MBPOLL_VERSION)
WriteGitVersionFile(${CMAKE_CURRENT_BINARY_DIR}/version-git.h)
set(MBPOLL_VERSION
  ${MBPOLL_VERSION_MAJOR}.${MBPOLL_VERSION_MINOR}.${MBPOLL_VERSION_PATCH})
#target_include_directories(mbpoll PUBLIC ${CMAKE_CURRENT_BINARY_DIR})
#message("MBPOLL_VERSION=${MBPOLL_VERSION}")
#}}}}

include_directories(
    .
    src
    3rdparty
    ${CMAKE_CURRENT_BINARY_DIR}

)


# Compiler options
add_definitions(-O2)
add_definitions(-Wall)
add_definitions(-Wno-unused-parameter)
add_definitions(-Wno-unused-function)
add_definitions(-Wno-unused-const-variable)
add_definitions(
    -DNDEBUG
)


# Linker options


if(WIN32)
    # Resource options
endif(WIN32)

# Library path
set(CMAKE_LDFLAGS "${CMAKE_LDFLAGS} -L. ")

# Define the C sources
set ( C_SRCS
    ${CMAKE_CURRENT_LIST_DIR}/3rdparty/modbus/modbus-rtu.c
    ${CMAKE_CURRENT_LIST_DIR}/3rdparty/sysio/delay.c
    ${CMAKE_CURRENT_LIST_DIR}/3rdparty/sysio/serial.c
    ${CMAKE_CURRENT_LIST_DIR}/3rdparty/modbus/modbus-data.c
    ${CMAKE_CURRENT_LIST_DIR}/3rdparty/modbus/modbus.c
    ${CMAKE_CURRENT_LIST_DIR}/src/mbpoll.c
    ${CMAKE_CURRENT_LIST_DIR}/3rdparty/modbus/modbus-tcp.c
)

set_source_files_properties(
    ${C_SRCS} PROPERTIES COMPILE_FLAGS 
    " -O2 -Wall -Wno-unused-parameter -Wno-unused-function -Wno-unused-const-variable")

if(WIN32)
    enable_language(RC)
    set(CMAKE_RC_COMPILE_OBJECT
        "<CMAKE_RC_COMPILER> ${RC_OPTIONS} -O coff -i <SOURCE> -o <OBJECT>")
endif(WIN32)



#{{{{ User Code 2
# Place your code here
#}}}}

add_executable(mbpoll ${RC_SRCS} ${CXX_SRCS} ${C_SRCS})
target_link_libraries(mbpoll ${LINK_OPTIONS})



#{{{{ User Code 3
# Place your code here
install(TARGETS mbpoll RUNTIME DESTINATION bin)

### Debian Package generation
set(CPACK_GENERATOR "DEB")
set(CPACK_PACKAGE_VERSION "${MBPOLL_PKG_VERSION}")
set(CPACK_DEBIAN_PACKAGE_MAINTAINER "epsilonrt")
include(CPack)
#}}}}

